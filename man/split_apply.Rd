% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_apply.R
\name{split_apply}
\alias{split_apply}
\title{Apply a function to groups of columns}
\usage{
split_apply(X, FUN, FACTOR, SEP = ".", ...)
}
\arguments{
\item{X}{An object coercible to data frame.}

\item{FUN}{A function that receives a data frame and returns a vector.}

\item{FACTOR}{A ‘factor’ in the sense that \code{as.factor(FACTOR)} defines
the grouping, or a list of such factors in which case their
\code{\link[base]{interaction}} is used for the grouping.}

\item{SEP}{String to construct the new level labels by joining the
constituent ones.  Defaults to \code{"."}.}

\item{...}{Optional arguments to \code{FUN}.}
}
\value{
A data frame, result of the split-apply-combine process.
}
\description{
Divide the columns of a data frame by the groups defined in \code{FACTOR},
apply the function \code{FUN} to each subgroup and then join the resulting
vectors in a new data frame.
}
\examples{
data(geneData, geneCovariate, package='Biobase')
gData <- head(geneData, n=10)

meanExprs <- split_apply(log2(gData), FUN=rowMeans,
                         FACTOR=geneCovariate[c('sex','type')], na.rm=TRUE)
summary(meanExprs)

}
\seealso{
\code{\link[base]{split}}, \code{\link[base]{lapply}}
}

