% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_table.R
\name{filter_table}
\alias{filter_table}
\title{Table rows filtering}
\usage{
filter_table(x, summary = c("mean", "median", "sd", "max", "min", "sum",
  "prod", "all", "any", "count"), test = c("==", "!=", ">", "<", ">=", "<="),
  ..., MoreArgs = NULL, method = c("row", "all", "any", "count"),
  group = NULL, na.rm = FALSE, drop = NULL)
}
\arguments{
\item{x}{A matrix, data frame or data table.}

\item{summary}{An expression with the summary method and the logical
comparison, or the name of a summary method.  See \strong{Details}.  Defaults
to \code{"sum"}.}

\item{test}{A single character string representing a logical comparison, or
a funtion that will be called with the summary vector as the first argument.
Defaults to \code{"=="}.}

\item{...}{A value to be compared to the summarized variables, or further
potential arguments passed to \code{test} function.  If testing by group, it
should be a single value or a vector of the same length as the number of
groups.  In this case also, \code{test} is applied using
\code{\link[base]{mapply}}, so extra arguments to a custom function may be
passed through \code{MoreArgs}.}

\item{MoreArgs}{A list of arguments passed to \code{test} by
\code{\link[base]{mapply}}.}

\item{method}{Method to obtain logical test results by row.  Defaults to
\code{"row"}.}

\item{group}{A ‘factor’ in the sense that \code{as.factor(group)} defines
the grouping, or a list of such factors in which case their
\code{\link[base]{interaction}} is used for the grouping.}

\item{na.rm}{If \code{\link[base:logical]{TRUE}}, \code{\link[base]{NA}}s are excluded first, otherwise not.}

\item{drop}{Character vector of column names to be ignored.}
}
\value{
A logical vector indicating if each row passed the test.
}
\description{
Return a logical vector for filtering the table's rows following these steps:
\enumerate{
  \item Calculate summary values for the rows, either for the whole row or
  for each group;
  \item Apply 'test' to the summarized values, comparing it to reference
  value(s) or using a custom function;
  \item If \code{test} was applied by group, reduce the logical result by
  row-wise \code{\link[base]{all}}, \code{\link[base]{any}} or
  \code{\link[matrixStats]{count}}.
}
}
\details{
This function can be called in two different ways.  The first and simpler one
is using an expression:

\code{filter_table(x, mean > 0) # TRUE if the row mean is greater than 0}

The second, more flexible form, is using the individual parameters:

\code{filter_table(x, summary='mean', test='>', 0) # argument names can be ommited}
}
\examples{
data(geneData, geneCovariate, package='Biobase')
gData <- head(geneData, n=100)

# Select if standard deviation of log expression level is greater than 0.5.
variant <- filter_table(log2(gData), sd > 0.5, na.rm=TRUE)

# Consider expressed if the median value is positive in at least one group.
expressed <- filter_table(gData, median > 0, method='any',
                          group=geneCovariate[c('sex', 'type')])

filtered <- gData[variant & expressed, ]
nrow(filtered)

}

